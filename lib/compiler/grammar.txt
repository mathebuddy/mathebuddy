<GRAMMAR input=pre_parsed_source>
  level [defaultChild="STRUCTURED_PARAGRAPH"] =
      "ROOT" INDENT
        { levelItem }
      DEDENT;
  levelItem =
      part
    | exercise
    | code
    | exampleDefinition
    | alignment
    | equation
    | table
    | figure
    | text
    | structuredParagraph;
  part =
    "PART" [ INDENT
      "ICON" "=" value;
    DEDENT ]
  exercise [defaultChild="PARAGRAPH"] =
    "EXERCISE" [ title ] [ label ] INDENT
      [ "REQUIREMENT" "=" value ] "\n"
      [ "ORDER" "=" "static" ] "\n"
      [ "CHOICE_ALIGNMENT" "=" "horizontal" ] "\n"
      [ "DISABLE_RETRY" "=" "true" ] "\n"
      [ "KEYBOARD" "=" value ] "\n"
      { levelItem }
    DEDENT;
  code =
    "CODE" IDENT
      SMPL_CODE;
    DEDENT;
  exampleDefinition [defaultChild="PARAGRAPH"] =
    exampleDefinitionKeyword [ title ] [ label ] INDENT
      { levelItem }
    DEDENT;
  exampleDefinitionKeyword =
      "AXIOM" | "CLAIM" | "CONJECTURE" | "COROLLARY"
    | "DEFINITION" | "EXAMPLE" | "IDENTITY" | "LEMMA" | "PARADOX"
    | "PROPOSITION" | "THEOREM" | "TODO".
  alignment [defaultChild="PARAGRAPH"] =
    alignmentKeyword INDENT
      { levelItem }
    DEDENT;
  alignmentKeyword =
    "CENTER" | "LEFT" | "RIGHT";
  equation =
    equationKeyword [ label ] INDENT
      *
    DEDENT;
  equationKeyword =
      "ALIGNED-EQUATION" | "ALIGNED-EQUATION*"
    | EQUATION" | "EQUATION*";
  table =
    "TABLE" [ title ] [ label ] IDENT
      { table_row }
    DEDENT;
  table_row =
    table_column { "&" table_column } "\n";
  table_column =
    paragraph;
  figure [defaultChild="CAPTION"] =
    "FIGURE" [ title ] [ label ] IDENT
      [ "PATH" "=" value ] "\n"
      [ "WITH" "=" INT ] "\n"
      { code | caption }
    DEDENT;
  caption =
    "CAPTION" INDENT
      *
    DEDENT;
  text [defaultChild="TEXT"] =
    "TEXT" INDENT
      { levelItem };
    DEDENT;
  title =
    { <!"@" && !"\n"> };
  label =
    "@" { <!"\n"> };
  value =
    { <!"\n"> };
  structuredParagraph =
    "STRUCTURED_PARAGRAPH" INDENT
      { structuredParagraphPart };
    DEDENT;
  structuredParagraphPart =
      levelTitle
    | section
    | subSection
    | paragraph;
  levelTitle =
    * "\n" "####" * "\n";
  section =
    * "\n" "====" * "\n";
  subSection =
    * "\n" "----" * "\n";
</GRAMMAR>
<GRAMMAR>
  paragraph =
      { part };
  part =
      itemize
    | enumerate
    | enumerateAlpha
    | bold
    | italic
    | inlineMath
    | reference
    | <PARSING_EXERCISE> inputElement
    | <PARSING_EXERCISE> singleChoiceOption
    | <PARSING_EXERCISE> multipleChoiceOption
    | linefeed
    | textProperty
    | text;
  itemize =
        <COLUMN=1>  "-"      { part } "\n"
      { <COLUMN=1> ("-"|" ") { part } "\n" };
  enumerate =
        <COLUMN=1>  "#."      { part } "\n"
      { <COLUMN=1> ("#."|" ") { part } "\n" };
  enumerateAlpha =
        <COLUMN=1>  "-)"      { part } "\n"
      { <COLUMN=1> ("-)"|" ") { part } "\n" };
  bold =
      "**" { part } "**";
  italic =
      "*" { part } "*";
  inlineMath =
      "$" inlineMathCore "$";
  reference =
      "@" ID [ ":" ID ];
  inputElement =
      "#" ID;
  singleChoiceOption =
      <COLUMN=1> "(" ( "x" | ":" ID | <EMPTY> ) ")" { part } "\n";
  multipleChoiceOption =
      <COLUMN=1> "[" ( "x" | ":" ID | <EMPTY> ) "]" { part } "\n";
  lineFeed =
      "\n";
  textProperty =
      <COLUMN!=1> "[" { part } "]" "@" ( "bold" | "italic" | "color" INT );
  text =
      *;
</GRAMMAR>
<GRAMMAR>
  inlineMathCore =
    { ( "@" ID | "@@" ID | <!"$"> ) };
</GRAMMAR>
